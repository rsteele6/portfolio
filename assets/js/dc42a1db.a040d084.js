"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[646],{8850:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"documentation-samples/states-api-spec/Overview","title":"Overview","description":"USA map","source":"@site/docs/documentation-samples/states-api-spec/overview.md","sourceDirName":"documentation-samples/states-api-spec","slug":"/documentation-samples/states-api-spec/overview","permalink":"/documentation-samples/states-api-spec/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"Overview","slug":"overview"},"sidebar":"defaultSidebar","previous":{"title":"States API Spec","permalink":"/category/states-api-spec"},"next":{"title":"Nutanix CE Installation Guide","permalink":"/category/nutanix-ce-installation-guide"}}');var i=s(4848),a=s(8453);const o={sidebar_position:1,id:"Overview",slug:"overview"},r="Overview",c={},d=[{value:"Description",id:"description",level:2},{value:"Technologies used",id:"technologies-used",level:2},{value:"Links",id:"links",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"USA map",src:s(8250).A+"",width:"1779",height:"471"})}),"\n",(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"overview",children:"Overview"})}),"\n",(0,i.jsxs)(t.p,{children:["This document is an OpenAPI spec I created for a ",(0,i.jsx)(t.a,{href:"/programming-projects/states-api",children:"Node.js REST API"})," developed as a final project for a backend development course. The API allows users to retrieve, add, update, and delete data points about individual U.S. states or all states."]}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"I built a Node.js API as part of a backend development course. Following the project, I created an OpenAPI 3.1 specification document to showcase my skills in API documentation and specification."}),"\n",(0,i.jsx)(t.p,{children:"The API supports operations to retrieve, add, update, and delete information about one or more U.S. states. Data was stored in a MongoDB database hosted on Heroku, and responses are returned in JSON format."}),"\n",(0,i.jsx)(t.h2,{id:"technologies-used",children:"Technologies used"}),"\n",(0,i.jsx)("ul",{children:(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://redocusaurus.vercel.app/docs/",target:"_blank",children:"Redocusaurus plugin"})})}),"\n",(0,i.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,i.jsx)("ul",{children:(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"/projects/states-api-spec",target:"_blank",children:"View the API specification"})})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8250:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/usa-map-864ec041d6a46ac8aecaff65a797a748.jpg"},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>r});var n=s(6540);const i={},a=n.createContext(i);function o(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);